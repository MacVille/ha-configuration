#Waste Collection Sensoren
- platform: waste_collection_schedule
  name: AbfallBlaueTonne
  details_format: "upcoming"
  value_template: "in {{value.daysTo}} Tagen"
  types:
    - "Blaue Tonne"

- platform: waste_collection_schedule
  name: AbfallGelberSack
  details_format: "upcoming"
  value_template: "in {{value.daysTo}} Tagen"
  types:
    - "Gelber Sack"

- platform: waste_collection_schedule
  name: AbfallRestMuell
  details_format: "upcoming"
  value_template: "in {{value.daysTo}} Tagen"
  types:
    - "Restmüll"

- platform: waste_collection_schedule
  name: AbfallSchadstoffSammlung
  details_format: "upcoming"
  value_template: "in {{value.daysTo}} Tagen"
  types:
    - "Schadstoffsammlung"

- platform: waste_collection_schedule
  name: AbfallBioTonne
  details_format: "upcoming"
  value_template: "in {{value.daysTo}} Tagen"
  types:
    - "Biotonne"

- platform: waste_collection_schedule
  name: AbfallNachster
  details_format: "upcoming"
  value_template: "in {{value.daysTo}} Tagen"

# Minimal configuration of the standard time and date sensor
- platform: time_date
  display_options:
    - "time"
    - "date"

# Tageszeit Sensor für Dashboards
- platform: template
  sensors:
    time_of_day:
      friendly_name: "Tageszeit"
      value_template: >-
        {% if is_state('binary_sensor.Morgen','on') %}
          Morgen
        {% elif is_state('binary_sensor.Mittag','on') %}
          Mittag
        {% elif is_state('binary_sensor.Abend','on') %}
          Abend
        {% else %}
          Nacht
        {% endif %}
      icon_template: >-
        {% if is_state('binary_sensor.Morgen','on') %}
          mdi:weather-sunset-up
        {% elif is_state('binary_sensor.Mittag','on') %}
          mdi:white-balance-sunny
        {% elif is_state('binary_sensor.Abend','on') %}
          mdi:weather-sunset-down
        {% else %}
          mdi:weather-night
        {% endif %}

    #Zähler wieviel Lichter/Türen/Fenster im Haus An sind
    counter_lights:
      friendly_name: Angeschaltene Lichter
      value_template: >-
        {% set reject = [ 'light.mittagspause_joshua', 'light.alle_lichter', 'light.alle_lichter_wohnzimmer', 'light.alle_lichter_kuche'] %}
        {{ states.light | rejectattr('entity_id', 'in', reject) | selectattr('state','equalto','on')|list|length }}
        
    counter_doors:
      friendly_name: offene Türen
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'door') | list | count | int }}

    counter_windows:
      friendly_name: offene Fenster
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'window') | list | count | int }}

    #Briefkasten für Chipkarte anpassen
    briefkasten_status:
      friendly_name: "Briefkasten zustand"
      value_template: >-
        {% if is_state('input_boolean.briefkasten','on') %}
          Post war da
        {% else %}
          Post war nicht da
        {% endif %}
      icon_template: >-
        {% if is_state('input_boolean.briefkasten','on') %}
          mdi:mailbox-open-up
        {% else %}
          mdi:mailbox
        {% endif %}
      unique_id: 5405660e5ff2499e8180e883dffb27d3

    
    ###################################################################
    #                                                                 #
    #                  Berechnen von Stromkosten                      #
    #                                                                 #
    ###################################################################

    #Berechnung der Stomkosten in €/kWh für Hochtarif im Monat
    stromkosten_ht:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Hochtarif Sommer
        {% else %}
          Kosten für Hochtarif Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.stromverbrauch_hochtarif') | float * states('input_number.stromkosten_hochtarif_januar_juni') | float ) | round(2)}}
        {% else %}
          {{ (states('sensor.stromverbrauch_hochtarif') | float * states('input_number.stromkosten_hochtarif_juli_dezember') | float ) | round(2)}}
        {% endif %}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: 19c3f876ebbe444f8ee0f11ce42dbda5

    #Berechnung der Stomkosten in €/kWh für Niedertarif im Monat
    stromkosten_nt:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Niedertarif Sommer
        {% else %}
          Kosten für Niedertarif Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.stromverbrauch_niedertarif') | float * states('input_number.stromkosten_niedertarif_januar_juni') | float ) | round(2) }}
        {% else %}
          {{ (states('sensor.stromverbrauch_niedertarif') | float * states('input_number.stromkosten_niedertarif_juli_dezember') | float ) | round(2) }}
        {% endif %}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: 198fd71dd162428cb6ad26a937bb39b7

    #Berechnung ob Grundgebühr aussreicht oder nicht im Monat
    stromkosten_grundgebuehr:
      friendly_name: "Strom Grundgebühr rechnung"
      value_template: >
        {{ ((states('sensor.stromkosten_ht') | float + states('sensor.stromkosten_nt') | float ) - states('input_number.stromgrundgebuhr') |float ) |round(2)  }}
      icon_template: mdi:currency-eur
      unit_of_measurement: EUR
      unique_id: 6a932828c77d4028af5db57adc8531d3

    stromkosten_grundgebuehr_inkl_grundpreis:
      friendly_name: "Strom Grundgebühr inkl. Grundpreis"
      value_template: >
        {{ (states('sensor.stromkosten_grundgebuehr') | float + states('input_number.stromgrundpreis') | float) | round(2) }}
      icon_template: mdi:currency-eur
      unit_of_measurement: EUR
      unique_id: 29d75fd8ebf042379ab019cd3e223257

    #Sensor für Energie Dashboard welcher dynamisch die Tarife nutzt.
    strompreis_fuer_dashboard:
      friendly_name: "Strompreis für Energie Dashbaord"
      value_template: >
        {% if now().month in [1,2,3,4,5,6] %}
          {% if is_state('select.stromverbrauch', 'Hochtarif') %}
            {{ states('input_number.stromkosten_hochtarif_januar_juni') }}
          {% else %}
            {{ states('input_number.stromkosten_niedertarif_januar_juni') }}
          {% endif %}
        {% else %}
          {% if is_state('select.stromverbrauch', 'Hochtarif') %}
            {{ states('input_number.stromkosten_hochtarif_juli_dezember') }}
          {% else %}
            {{ states('input_number.stromkosten_niedertarif_juli_dezember') }}
          {% endif %}
        {% endif %}
      unit_of_measurement: '€/kWh'
      icon_template: mdi:currency-eur
      unique_id: 6361de1849dc4646906415793826b95c

    ###################################################################
    #                                                                 #
    #         Berechnen von Stromkosten für Energie Dashboard         #
    #                     Hochtarif / Niedertarif                     #
    #                                                                 #
    ###################################################################

    strompreis_fuer_dashboard_hochtarif:
      friendly_name: "Strompreis für Energie Dashboard Hochtarif"
      value_template: >
       {% if now().month in [1,2,3,4,5,6] %}
          {{ states('input_number.stromkosten_hochtarif_januar_juni') }}
        {% else %}
          {{ states('input_number.stromkosten_hochtarif_juli_dezember') }}
        {% endif %}
      unit_of_measurement: '€/kWh'
      icon_template: mdi:currency-eur
      unique_id: d5be0186186f4b4abe28df7dec9f7861
    
    strompreis_fuer_dashboard_niedertarif:
      friendly_name: "Strompreis für Energie Dashboard Niedertarif"
      value_template: >
       {% if now().month in [1,2,3,4,5,6] %}
          {{ states('input_number.stromkosten_niedertarif_januar_juni') }}
        {% else %}
          {{ states('input_number.stromkosten_niedertarif_juli_dezember') }}
        {% endif %}
      unit_of_measurement: '€/kWh'
      icon_template: mdi:currency-eur
      unique_id: 4e02812021fc49e7b8e98b583030ff96

    ###################################################################
    #                                                                 #
    #          Berechnen von Stromkosten täglich HT / NT              #
    #                                                                 #
    ###################################################################
    stromkosten_taeglich_ht:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Hochtarif täglich Sommer
        {% else %}
          Kosten für Hochtarif täglich Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.strom_taglich_hochtarif') | float * states('input_number.stromkosten_hochtarif_januar_juni') | float ) | round(2)}}
        {% else %}
          {{ (states('sensor.strom_taglich_hochtarif') | float * states('input_number.stromkosten_hochtarif_juli_dezember') | float ) | round(2)}}
        {% endif %}
      #value_template: >
      #  {{ states('sensor.stromverbrauch_hochtarif') | float * states('input_number.stromkosten_hochtarif_juli_dezember') | float | round(2)}}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: 2a7ed5b7a9114132a04c42728de09105

    #Berechnung der Stomkosten in €/kWh für Niedertarif
    stromkosten_taeglich_nt:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Niedertarif täglich Sommer
        {% else %}
          Kosten für Niedertarif täglich Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.strom_taglich_niedertarif') | float * states('input_number.stromkosten_niedertarif_januar_juni') | float ) | round(2) }}
        {% else %}
          {{ (states('sensor.strom_taglich_niedertarif') | float * states('input_number.stromkosten_niedertarif_juli_dezember') | float ) | round(2) }}
        {% endif %}
      #value_template: >
      #  {{ states('sensor.stromverbrauch_niedertarif') | float * states('input_number.stromkosten_niedertarif_juli_dezember') | round(2) }}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: ec53a06e8df24e8cba061b914f1c7e96

    #######################################################################
    #                                                                     #
    #          Berechnen von Stromkosten wöchentlich HT / NT              #
    #                                                                     #
    #######################################################################
    stromkosten_woechentlich_ht:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Hochtarif wöchentlich Sommer
        {% else %}
          Kosten für Hochtarif wöchentlich Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.strom_wochentlich_hochtarif') | float * states('input_number.stromkosten_hochtarif_januar_juni') | float ) | round(2)}}
        {% else %}
          {{ (states('sensor.strom_wochentlich_hochtarif') | float * states('input_number.stromkosten_hochtarif_juli_dezember') | float ) | round(2)}}
        {% endif %}
      #value_template: >
      #  {{ states('sensor.stromverbrauch_hochtarif') | float * states('input_number.stromkosten_hochtarif_juli_dezember') | float | round(2)}}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: 5bc03260821a438985a5095f5a76f0f8

    #Berechnung der Stomkosten in €/kWh für Niedertarif
    stromkosten_woechentlich_nt:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Niedertarif wöchentlich Sommer
        {% else %}
          Kosten für Niedertarif wöchentlich Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.strom_wochentlich_niedertarif') | float * states('input_number.stromkosten_niedertarif_januar_juni') | float ) | round(2) }}
        {% else %}
          {{ (states('sensor.strom_wochentlich_niedertarif') | float * states('input_number.stromkosten_niedertarif_juli_dezember') | float ) | round(2) }}
        {% endif %}
      #value_template: >
      #  {{ states('sensor.stromverbrauch_niedertarif') | float * states('input_number.stromkosten_niedertarif_juli_dezember') | round(2) }}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: 1de2303d67494546964495db617cc317

    ###################################################################
    #                                                                 #
    #          Berechnen von Stromkosten jährlich HT / NT             #
    #                                                                 #
    ###################################################################
    stromkosten_jaehrlich_ht:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Hochtarif jährlich Sommer
        {% else %}
          Kosten für Hochtarif jährlich Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.strom_jahrlich_hochtarif') | float * states('input_number.stromkosten_hochtarif_januar_juni') | float ) | round(2)}}
        {% else %}
          {{ (states('sensor.strom_jahrlich_hochtarif') | float * states('input_number.stromkosten_hochtarif_juli_dezember') | float ) | round(2)}}
        {% endif %}
      #value_template: >
      #  {{ states('sensor.stromverbrauch_hochtarif') | float * states('input_number.stromkosten_hochtarif_juli_dezember') | float | round(2)}}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: 5a88f9edbaa645e4a92919e2ac19949a

    stromkosten_jaehrlich_nt:
      friendly_name: >-
        {% if now().month in [1,2,3,4,5,6] %}
          Kosten für Niedertarif jahrlich Sommer
        {% else %}
          Kosten für Niedertarif jahrlich Winter
        {% endif %}
      value_template: >-
        {% if now().month in [1,2,3,4,5,6] %}
          {{ (states('sensor.strom_jahrlich_niedertarif') | float * states('input_number.stromkosten_niedertarif_januar_juni') | float ) | round(2) }}
        {% else %}
          {{ (states('sensor.strom_jahrlich_niedertarif') | float * states('input_number.stromkosten_niedertarif_juli_dezember') | float ) | round(2) }}
        {% endif %}
      #value_template: >
      #  {{ states('sensor.stromverbrauch_niedertarif') | float * states('input_number.stromkosten_niedertarif_juli_dezember') | round(2) }}
      unit_of_measurement: EUR
      icon_template: mdi:currency-eur
      unique_id: 663f5c6c2d3e49e7aae43e6bcdb22aeb

    ###################################################################
    #                                                                 #
    #            Berechnen von Stromverbrauch gesamt                  #
    #                                                                 #
    ###################################################################
    stromverbrauch_jaehrlich:
      friendly_name: "Jährlicher Stromverbrauch gesamt"
      value_template: >-
        {{ (states('sensor.strom_jahrlich_hochtarif') | float + states('sensor.strom_jahrlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export
      unique_id: 37228d6a567545719ddf7667221b36dd

    stromverbrauch_monatlich:
      friendly_name: "Monatlicher Stromverbrauch gesamt"
      value_template: >-
        {{ (states('sensor.stromverbrauch_hochtarif') | float + states('sensor.stromverbrauch_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export
      unique_id: 2c97c5bf20584361b775999d5ed7c90d

    stromverbrauch_woechentlich:
      friendly_name: "Wöchentlicher Stromverbrauch gesamt"
      value_template: >-
        {{ (states('sensor.strom_wochentlich_hochtarif') | float + states('sensor.strom_wochentlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export
      unique_id: 8e06a4aafdd74e8587419ee13ec0e472

    stromverbrauch_taeglich:
      friendly_name: "Täglicher Stromverbrauch gesamt"
      value_template: >-
        {{ (states('sensor.strom_taglich_hochtarif') | float + states('sensor.strom_taglich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export
      unique_id: e1ae21e4fcf643dbaa5b71180f39d69d

    ###################################################################
    #                                                                 #
    #            Berechnen von Stromverbrauch Geräte                  #
    #                                                                 #
    ###################################################################
    homelab_stromverbrauch_jaehrlich_gesamt:
      friendly_name: "Homelab Stromverbrauch jährlich gesamt"
      value_template: >-
        {{ (states('sensor.homelab_stromverbrauch_jahrlich_hochtarif') | float + states('sensor.homelab_stromverbrauch_jahrlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    homelab_stromverbrauch_monatlich_gesamt:
      friendly_name: "Homelab Stromverbrauch wöchentlich gesamt"
      value_template: >-
        {{ (states('sensor.homelab_stromverbrauch_monatlich_hochtarif') | float + states('sensor.homelab_stromverbrauch_monatlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    homelab_stromverbrauch_woechentlich_gesamt:
      friendly_name: "Homelab Stromverbrauch wöchentlich gesamt"
      value_template: >-
        {{ (states('sensor.homelab_stromverbrauch_wochentlich_hochtarif') | float + states('sensor.homelab_stromverbrauch_wochentlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    homelab_stromverbrauch_taeglich_gesamt:
      friendly_name: "Homelab Stromverbrauch täglich gesamt"
      value_template: >-
        {{ (states('sensor.homelab_stromverbrauch_taglich_hochtarif') | float + states('sensor.homelab_stromverbrauch_taglich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    heizung_buero_eg_stromverbrauch_jaehrlich_gesamt:
      friendly_name: "Heizung Büro EG Stromverbrauch jährlich gesamt"
      value_template: >-
        {{ (states('sensor.heizung_buro_eg_jahrlich_hochtarif') | float + states('sensor.heizung_buro_eg_jahrlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    heizung_buero_eg_stromverbrauch_monatlich_gesamt:
      friendly_name: "Heizung Büro EG Stromverbrauch wöchentlich gesamt"
      value_template: >-
        {{ (states('sensor.heizung_buro_eg_monatlich_hochtarif') | float + states('sensor.heizung_buro_eg_monatlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    heizung_buero_eg_stromverbrauch_woechentlich_gesamt:
      friendly_name: "Heizung Büro EG Stromverbrauch wöchentlich gesamt"
      value_template: >-
        {{ (states('sensor.heizung_buro_eg_wochentlich_hochtarif') | float + states('sensor.heizung_buro_eg_wochentlich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    heizung_buero_eg_stromverbrauch_taeglich_gesamt:
      friendly_name: "Heizung Büro EG Stromverbrauch täglich gesamt"
      value_template: >-
        {{ (states('sensor.heizung_buro_eg_taglich_hochtarif') | float + states('sensor.heizung_buro_eg_taglich_niedertarif') | float)  | round(2) }}
      unit_of_measurement: kWh
      icon_template: mdi:transmission-tower-export

    ###################################################################
    #                                                                 #
    #            Berechnen von Stromkosten gesamt                     #
    #                                                                 #
    ###################################################################

    stromkosten_jaehrlich:
      friendly_name: "Jährliche Stromkosten gesamt"
      value_template: >-
        {{ (states('sensor.stromkosten_jaehrlich_ht') | float + states('sensor.stromkosten_jaehrlich_nt') | float) | round(2) }}
      unit_of_measurement: €/Jahr
      icon_template: mdi:currency-eur
      unique_id: cf5c5bcd67664c70b28317fb11d0637f

    stromkosten_monatlich:
      friendly_name: "Monatlicher Stromkosten gesamt"
      value_template: >-
        {{ (states('sensor.stromkosten_ht') | float + states('sensor.stromkosten_nt') | float) | round(2) }}
      unit_of_measurement: €/Monat
      icon_template: mdi:currency-eur
      unique_id: 6d2c8b3079f041f7876e877d1c54650b

    stromkosten_woechentlich:
      friendly_name: "Wöchentliche Stromkosten gesamt"
      value_template: >-
        {{ (states('sensor.stromkosten_woechentlich_ht') | float + states('sensor.stromkosten_woechentlich_nt') | float) | round(2) }}
      unit_of_measurement: €/Woche
      icon_template: mdi:currency-eur
      unique_id: e1938fe622a64dddaba66ce9e602f018

    stromkosten_taeglich:
      friendly_name: "Täglicher Stromkosten gesamt"
      value_template: >-
        {{ (states('sensor.stromkosten_taeglich_ht') | float + states('sensor.stromkosten_taeglich_nt') | float) | round(2) }}
      unit_of_measurement: €/Tag
      icon_template: mdi:currency-eur
      unique_id: f109432e0b1a470e9c16e2dc9c9ce662

    ###################################################################
    #                                                                 #
    #            E-Ink Display Badezimmer mit HT                      #
    #                                                                 #
    ###################################################################

    epaper_weather_actual:
    #weahtericon;temperature;humidity,wind_speed
      value_template: "{{states('weather.zuhause')}};{{state_attr('weather.zuhause', 'temperature') | replace('.',',') }};{{state_attr('weather.zuhause', 'humidity') | replace('.',',') }};{{state_attr('weather.zuhause', 'wind_speed') | replace('.',',') }}"
    epaper_weather_forecast:
        value_template: "{{as_timestamp(state_attr('weather.zuhause', 'forecast')[0]['datetime'], '%Y-%m-%dT%H:%M') | timestamp_custom('%a') }};{{state_attr('weather.zuhause', 'forecast')[0]['condition']}};{{state_attr('weather.zuhause', 'forecast')[0]['temperature']| replace('.',',') }};{{state_attr('weather.zuhause', 'forecast')[0]['templow']| replace('.',',') }};{{as_timestamp(state_attr('weather.zuhause', 'forecast')[1]['datetime'], '%Y-%m-%dT%H:%M') | timestamp_custom('%a') }};{{state_attr('weather.zuhause', 'forecast')[1]['condition']}};{{state_attr('weather.zuhause', 'forecast')[1]['temperature']| replace('.',',') }};{{state_attr('weather.zuhause', 'forecast')[1]['templow']| replace('.',',') }};{{as_timestamp(state_attr('weather.zuhause', 'forecast')[2]['datetime'], '%Y-%m-%dT%H:%M') | timestamp_custom('%a') }};{{state_attr('weather.zuhause', 'forecast')[2]['condition']}};{{state_attr('weather.zuhause', 'forecast')[2]['temperature']| replace('.',',') }};{{state_attr('weather.zuhause', 'forecast')[2]['templow']| replace('.',',') }};{{as_timestamp(state_attr('weather.zuhause', 'forecast')[3]['datetime'], '%Y-%m-%dT%H:%M') | timestamp_custom('%a') }};{{state_attr('weather.zuhause', 'forecast')[3]['condition']}};{{state_attr('weather.zuhause', 'forecast')[3]['temperature']| replace('.',',') }};{{state_attr('weather.zuhause', 'forecast')[3]['templow']| replace('.',',') }};{{as_timestamp(state_attr('weather.zuhause', 'forecast')[4]['datetime'], '%Y-%m-%dT%H:%M') | timestamp_custom('%a') }};{{state_attr('weather.zuhause', 'forecast')[4]['condition']}};{{state_attr('weather.zuhause', 'forecast')[4]['temperature']| replace('.',',') }};{{state_attr('weather.zuhause', 'forecast')[4]['templow']| replace('.',',') }}"
    epaper_sunrise:
      value_template: "{{ as_timestamp(state_attr('sun.sun', 'next_dawn'), '%Y-%m-%dT%H:%M') | timestamp_custom('%H:%M') }}"
    epaper_sunset:
      value_template: "{{ as_timestamp(state_attr('sun.sun', 'next_dusk'), '%Y-%m-%dT%H:%M')  | timestamp_custom('%H:%M') }}"
    epaper_humidity_outside:
      value_template: "{{ states('sensor.garten_humidity')}}"
    epaper_temperatur_outside:
      value_template: "{{ states('sensor.garten_temperature')}}"
    
    niedertarif_korrekter_wert_taeglich:
      friendly_name: "Korrekter Wert täglich Niedertarif"
      value_template: >-
        {{ (states('sensor.strom_taglich_niedertarif') | float - (states('input_number.niedertarif_alter_falscher_wert') | float - states('input_number.niedertarif_alter_wert') | float))|round(2)}}

    niedertarif_korrekter_wert_woechentlich:
      friendly_name: "Korrekter Wert wöchentlich Niedertarif"
      value_template: >-
        {{ (states('sensor.strom_wochentlich_niedertarif') | float - (states('input_number.niedertarif_alter_falscher_wert') | float - states('input_number.niedertarif_alter_wert') | float))|round(2)}}

    niedertarif_korrekter_wert_monatlich:
      friendly_name: "Korrekter Wert Monatlich Niedertarif"
      value_template: >-
        {{ (states('sensor.stromverbrauch_niedertarif') | float - (states('input_number.niedertarif_alter_falscher_wert') | float - states('input_number.niedertarif_alter_wert') | float))|round(2)}}

    niedertarif_korrekter_wert_jaehrlich:
      friendly_name: "Korrekter Wert jährlich Niedertarif"
      value_template: >-
        {{ (states('sensor.strom_jahrlich_niedertarif') | float - (states('input_number.niedertarif_alter_falscher_wert') | float - states('input_number.niedertarif_alter_wert') | float))|round(2)}}

    hochtarif_korrekter_wert_taeglich:
      friendly_name: "Korrekter Wert täglich hochtarif"
      value_template: >-
        {{ (states('sensor.strom_taglich_hochtarif') | float - (states('input_number.hochtarif_alter_falscher_wert') | float - states('input_number.hochtarif_alter_wert') | float))|round(2)}}

    hochtarif_korrekter_wert_woechentlich:
      friendly_name: "Korrekter Wert wöchentlich hochtarif"
      value_template: >-
        {{ (states('sensor.strom_wochentlich_hochtarif') | float - (states('input_number.hochtarif_alter_falscher_wert') | float - states('input_number.hochtarif_alter_wert') | float))|round(2)}}

    hochtarif_korrekter_wert_monatlich:
      friendly_name: "Korrekter Wert Monatlich hochtarif"
      value_template: >-
        {{ (states('sensor.stromverbrauch_hochtarif') | float - (states('input_number.hochtarif_alter_falscher_wert') | float - states('input_number.hochtarif_alter_wert') | float))|round(2)}}

    hochtarif_korrekter_wert_jaehrlich:
      friendly_name: "Korrekter Wert jährlich hochtarif"
      value_template: >-
        {{ (states('sensor.strom_jahrlich_hochtarif') | float - (states('input_number.hochtarif_alter_falscher_wert') | float - states('input_number.hochtarif_alter_wert') | float))|round(2)}}


- platform: mqtt_room
  device_id: "apple:1005:9-8"
  name: 'Apple Watch Stefan (ESPresense)'
  state_topic: 'espresense/rooms'
  timeout: 10
  away_timeout: 120
- platform: mqtt_room
  device_id: "irk:26856d002cc9e7278fe241ed4d28cd6c"
  name: 'Apple iPhone Stefan (ESPresense)'
  state_topic: 'espresense/rooms'
  timeout: 10
  away_timeout: 120
- platform: mqtt_room
  device_id: "5a008e98ad37"
  name: 'Apple Watch Bella (ESPresense)'
  state_topic: 'espresense/rooms'
  timeout: 10
  away_timeout: 120


  